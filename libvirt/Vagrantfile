Vagrant.configure("2") do |config|
  config.vm.box = "debian/bookworm64"

  # Ensure the libvirt network is explicitly created
  config.vm.provider :libvirt do |lv|
    lv.management_network_name = "postgres_diy_net"
    lv.management_network_address = "192.168.60.0/24"
  end

  def setup_node(node, name, ip, memory, storage_size)
    node.vm.hostname = name
    node.vm.network :private_network, 
                    ip: ip, 
                    libvirt__network_name: "postgres_diy_net",
                    libvirt__dhcp_enabled: false  # Disable DHCP explicitly

    node.vm.provider :libvirt do |lv|
      lv.memory = memory
      lv.cpus = 1
      lv.storage :file, size: storage_size
    end

    node.vm.provision "file", source: File.expand_path("~/.ssh/postgres-key.pub"), destination: "/home/vagrant/postgres-key.pub"

    node.vm.provision "shell", inline: <<-SHELL
      mkdir -p /home/vagrant/.ssh
      chmod 700 /home/vagrant/.ssh
      cat /home/vagrant/postgres-key.pub >> /home/vagrant/.ssh/authorized_keys
      chmod 600 /home/vagrant/.ssh/authorized_keys
      chown -R vagrant:vagrant /home/vagrant/.ssh
      rm /home/vagrant/postgres-key.pub
    SHELL
  end

  # HAProxy nodes
  {
    "haproxy-01" => "192.168.60.100",
    "haproxy-02" => "192.168.60.101",
    "haproxy-03" => "192.168.60.102"
  }.each do |name, ip|
    config.vm.define name do |node|
      setup_node(node, name, ip, 1024, '15G')
    end
  end

  # PostgreSQL nodes
  {
    "postgres-01" => "192.168.60.103",
    "postgres-02" => "192.168.60.104",
    "postgres-03" => "192.168.60.105"
  }.each do |name, ip|
    config.vm.define name do |node|
      setup_node(node, name, ip, 2048, '25G')
    end
  end

  config.vm.synced_folder ".", "/vagrant", disabled: true
end

